sum(!(reject_k %in% 1:m0)) / sum(reject_idx),
0)
q
alpha <- 0.05
q_star <- 0.1
m0 <- 4
m <- 10
x <- rep(NA, m)
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
q <- ifelse(length(reject_k) > 0,
sum(!(reject_k %in% 1:m0)) / sum(reject_idx),
0)
q
alpha <- 0.05
q_star <- 0.1
m0 <- 4
m <- 10
x <- rep(NA, m)
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
q <- ifelse(length(reject_k) > 0,
sum(!(reject_k %in% 1:m0)) / sum(reject_idx),
0)
q
alpha <- 0.05
q_star <- 0.1
m0 <- 4
m <- 10
x <- rep(NA, m)
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
q <- ifelse(length(reject_k) > 0,
sum(!(reject_k %in% 1:m0)) / sum(reject_idx),
0)
q
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
library(ggplot2)
library(dplyr)
# Confidence level
alpha <- 0.05
q_star <- 0.1
m0 <- 4
m <- 10
nsims <- 1e4
q_vec <- 1:nsims
for (i in 1:nsims) {
x <- rep(NA, m)
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
q_vec[i] <- ifelse(length(reject_k) > 0,
sum(!(reject_k %in% 1:m0)) / sum(reject_idx),
0)
}
mean(q_vec)
# Confidence level
alpha <- 0.05
q_star <- 0.3
m0 <- 4
m <- 10
nsims <- 1e4
q_vec <- 1:nsims
for (i in 1:nsims) {
x <- rep(NA, m)
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
q_vec[i] <- ifelse(length(reject_k) > 0,
sum(!(reject_k %in% 1:m0)) / sum(reject_idx),
0)
}
mean(q_vec)
# Confidence level
alpha <- 0.05
q_star <- 0.3
m0 <- 40
m <- 100
nsims <- 1e4
q_vec <- 1:nsims
for (i in 1:nsims) {
x <- rep(NA, m)
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
q_vec[i] <- ifelse(length(reject_k) > 0,
sum(!(reject_k %in% 1:m0)) / sum(reject_idx),
0)
}
mean(q_vec)
# Confidence level
alpha <- 0.05
q_star <- 0.3
m0 <- 40
m <- 100
nsims <- 1e4
q_vec <- 1:nsims
for (i in 1:nsims) {
x <- rep(NA, m)
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
q_vec[i] <- ifelse(length(reject_k) > 0,
sum(!(reject_k %in% 1:m0)) / sum(reject_idx),
0)
}
mean(q_vec)
alpha <- 0.05
q_star <- 0.3
m0 <- 40
m <- 100
nsims <- 1e4
q_vec <- 1:nsims
for (i in 1:nsims) {
x <- rep(NA, m)
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
q_vec[i] <- ifelse(length(reject_k) > 0,
sum(!(reject_k %in% 1:m0)) / sum(reject_idx),
0)
}
mean(q_vec)
alpha <- 0.05
q_star <- 0.5
m0 <- 40
m <- 100
nsims <- 1e4
q_vec <- 1:nsims
for (i in 1:nsims) {
x <- rep(NA, m)
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
q_vec[i] <- ifelse(length(reject_k) > 0,
sum(!(reject_k %in% 1:m0)) / sum(reject_idx),
0)
}
mean(q_vec)
alpha <- 0.05
q_star <- 0.1
m0 <- 40
m <- 100
nsims <- 1e4
q_vec <- 1:nsims
for (i in 1:nsims) {
x <- rep(NA, m)
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
p <- 2 * (1 - pnorm(abs(x)))
k_vec <- order(p)
sort_p <- sort(p)
reject_idx <- (sort_p / 1:m) <= (q_star / m)
reject_k <- k_vec[reject_idx]
reject_k
q_vec[i] <- ifelse(length(reject_k) > 0,
sum(!(reject_k %in% 1:m0)) / sum(reject_idx),
0)
}
mean(q_vec)
ggplot() +
geom_histogram(aes(q_vec, ..density..), col = "snow", fill = "grey70")
mean(q_vec)
# Target FDR
q_star <- 0.3
# Number of "signals" and number of "noises"
m0 <- 40
m1 <- 60
m <- m0 + m1
# Number of simulations
nsims <- 1e4
# Create an empty vector for proportions of false discoveries
q_vec <- 1:nsims
for (i in 1:nsims) {
x <- rep(NA, m)
x[1:m0] <- rnorm(m0) + 1
x[(m0 + 1):m] <- rnorm(m - m0)
# Vector of p-values
p <- 2 * (1 - pnorm(abs(x)))
# Order of p-values
k_vec <- order(p)
# Sorted p-values
sort_p <- sort(p)
# BH procedure
reject_idx <- { (sort_p / 1:m) <= (q_star / m) }
reject_k <- k_vec[reject_idx]
# Calculate proportion of false discoveries
q_vec[i] <- ifelse(length(reject_k) > 0,
sum(!(reject_k %in% 1:m0)) / sum(reject_idx),
0)
}
mean(q_vec)
ggplot() +
geom_histogram(aes(q_vec, ..density..), col = "snow", fill = "grey70")
install.packages("boxr")
library(boxr)
box_auth()
?box_auth
box_auth(client_id = "ga13kmxlzlbfo5vbyisrq3ppu3259dew")
myfile <- box_read()
?box_read
?box_read_csv
box_search("40233317317")
myfile <- box_read_csv(file_id = "236345890624")
head(myfile)
box_ls(dir_id = "40233317317")
mylist <- box_ls(dir_id = "40233317317")
mylist
mylist %>% as.data.frame()
library(dplyr)
mylist %>% as.data.frame()
mylist <- box_ls(dir_id = "40233287595")
mylist %>% as.data.frame()
mylist %>% as.data.frame() %>% select(name)
mylist %>% as.data.frame() %>% select(name) %>% as.character()
mynames <- mylist %>% as.data.frame() %>% select(name)
mynames
mynames[1]
mynames <- mylist %>% as.data.frame() %>% pull(name)
mynames
blogdown:::serve_site()
setwd("~/Documents/Professional/Website/site_build")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
setwd("~/Documents/Professional/Website/site_build/content/post")
knitr::opts_chunk$set(collapse = TRUE)
nola <- read.csv("data/drosophila.csv")
head(nola)
nola <- read.csv("data/nola.csv")
head(nola)
nola <- read.csv("data/nola.csv")
head(nola)
nola <- read.csv("data/nola.csv") %>% rename(lon = long)
devtools::install_github("tidyverse/dplyr")
nola <- read.csv("data/nola.csv") %>% rename(lon = long)
nola <- read.csv("data/nola.csv")
head(nola)
nola %>% names()
library(dplyr)
library(dplyr)
library(ggplot2)
theme_set(theme_bw(base_size = 14, base_family = "Avenir Next"))
library(ggmap)
library(dplyr)
library(ggplot2)
theme_set(theme_bw(base_size = 14, base_family = "Avenir Next"))
library(ggmap)
nola <- read.csv("data/nola.csv")
NOLAmap <- get_map(
location = c(min(nola$lon), min(nola$lat), max(nola$lon), max(nola$lat)),
zoom = 13,
col = "bw")
storemap <- ggmap(NOLAmap) +
geom_point(
data = nola,
aes(x = lon, y = lat, col = factor(street)),
alpha = 0.5) +
scale_colour_brewer(
name = "",
labels = c("St Charles Ave", "S Carrollton Ave", "St Claude Ave"),
palette = "Set1") +
labs(title = "Location of all stores in dataset") +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
storemap
blogdown:::serve_site()
theme_set(theme_bw(base_size = 12))
library(ggmap)
theme_set(theme_bw(base_size = 12))
NOLAmap <- get_map(
location = c(min(nola$lon), min(nola$lat), max(nola$lon), max(nola$lat)),
zoom = 13,
col = "bw")
NOLAmap <- get_map(
location = c(min(nola$lon), min(nola$lat), max(nola$lon), max(nola$lat)),
zoom = 13,
col = "bw")
storemap <- ggmap(NOLAmap) +
geom_point(
data = nola,
aes(x = lon, y = lat, col = factor(street)),
alpha = 0.5) +
scale_colour_brewer(
name = "",
labels = c("St Charles Ave", "S Carrollton Ave", "St Claude Ave"),
palette = "Set1") +
labs(title = "Location of all stores in dataset") +
theme(plot.title = element_text(hjust = 0.5), legend.position="bottom")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
drosophila <- read.csv("data/drosophila.csv")
head(drosophila)
library(dplyr)
library(forcats)
library(ggplot2)
theme_set(theme_bw(base_size = 12))
drosophila <- read.csv("data/drosophila.csv")
drosophila <- drosophila %>%
mutate(gene = fct_inorder(gene))
drosophila <- read.csv("data/drosophila.csv")
drosophila <- drosophila %>%
mutate(gene = fct_inorder(gene))
